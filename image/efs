#!/bin/bash

# Copyright 2015 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Notes:
#  - Please install "jq" package before using this driver.
usage() {
	err "Invalid usage. Usage: "
	err "\t$0 init"
	err "\t$0 attach <json params> <nodename>"
	err "\t$0 detach <mount device> <nodename>"
	err "\t$0 waitforattach <mount device> <json params>"
	err "\t$0 mountdevice <mount dir> <mount device> <json params>"
	err "\t$0 unmountdevice <mount dir>"
	err "\t$0 isattached <json params> <nodename>"
	exit 1
}

err() {
  echo -ne $* 1>&2
}

log() {
  echo -ne $* >&1
}

ismounted() {
  MOUNT=`findmnt -n ${MNTPATH} 2>/dev/null | cut -d' ' -f1`
  if [ "${MOUNT}" == "${MNTPATH}" ]; then
    echo "1"
  else
    echo "0"
  fi
}

# <driver executable> attach <json options>
attach() {
  VOLUMEID=$(echo $1 | jq -r '.fileSystemID')
  REGION=$(echo $1 | jq -r '.region')
  # ${VOLUMEID}.efs.${REGION}.amazonaws.com
  # TODO: check if efs volume exists
  log "{\"status\": \"Success\", \"device\":\"${VOLUMEID}\"}"
  exit 0
}

detach() {
  log "{\"status\": \"Success\"}"
  exit 0
}

waitforattach() {
	shift
	attach $*
}

# <driver executable> mount <target mount dir> <mount device> <json options>
domountdevice() {
  MNTPATH=$1

  VOLUMEID=$(echo $2 | jq -r '.fileSystemID')
  REGION=$(echo $2 | jq -r '.region')
  EFS_DNS=${VOLUMEID}.efs.${REGION}.amazonaws.com
  CUSTOM_PATH=$(echo $2 | jq -r '.path')

  if [ $(ismounted) -eq 1 ] ; then
    log "{\"status\": \"Success\"}"
    exit 0
  fi

  mkdir -p ${MNTPATH}/${CUSTOM_PATH}
  EFS_FQDN=$(/usr/bin/curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone).${EFS_DNS}
  /bin/mount -t nfs4 -o nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 ${EFS_FQDN}:${CUSTOM_PATH} ${MNTPATH}

if [ $? -ne 0 ]; then
    err "{ \"status\": \"Failure\", \"message\": \"Failed to mount EFS volume at ${MNTPATH}\"}"
    exit 1
  fi
  log "{\"status\": \"Success\"}"
  exit 0
}

unmountdevice() {
  MNTPATH=$1
  if [ $(ismounted) -eq 0 ] ; then
    log "{\"status\": \"Success\"}"
    exit 0
  fi

  umount ${MNTPATH} &> /dev/null
  if [ $? -ne 0 ]; then
    err "{ \"status\": \"Failed\", \"message\": \"Failed to unmount volume at ${MNTPATH}\"}"
    exit 1
  fi
  rmdir ${MNTPATH} &> /dev/null

  log "{\"status\": \"Success\"}"
  exit 0
}

isattached() {
	log "{\"status\": \"Success\", \"attached\":true}"
	exit 0
}

op=$1

if [ "$op" = "init" ]; then
	log "{\"status\": \"Success\"}"
	exit 0
fi

if [ $# -lt 2 ]; then
	usage
fi

shift

case "$op" in
	attach)
		attach $*
		;;
	detach)
		detach $*
		;;
	waitforattach)
		waitforattach $*
		;;
	mountdevice)
		domountdevice $*
		;;
	unmountdevice)
		unmountdevice $*
		;;
	isattached)
    isattached $*
    ;;
	*)
		log "{ \"status\": \"Not supported\" }"
		exit 0
esac

exit 1
